// <auto-generated />
using System;
using InventoryAppEFCore.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryAppEFCore.DataLayer.Migrations
{
    [DbContext(typeof(InventoryAppEfCoreContext))]
    [Migration("20230730192600_Seeder")]
    partial class Seeder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            Name = "Client A"
                        },
                        new
                        {
                            ClientId = 2,
                            Name = "Client B"
                        },
                        new
                        {
                            ClientId = 3,
                            Name = "Client C"
                        });
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.LineItem", b =>
                {
                    b.Property<int>("LineItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineItemId"), 1L, 1);

                    b.Property<short>("NumOfProducts")
                        .HasColumnType("smallint");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LineItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("LineItems");

                    b.HasData(
                        new
                        {
                            LineItemId = 1,
                            NumOfProducts = (short)3,
                            OrderId = 1,
                            ProductId = 1,
                            ProductPrice = 100m
                        },
                        new
                        {
                            LineItemId = 2,
                            NumOfProducts = (short)2,
                            OrderId = 2,
                            ProductId = 2,
                            ProductPrice = 200m
                        },
                        new
                        {
                            LineItemId = 3,
                            NumOfProducts = (short)1,
                            OrderId = 3,
                            ProductId = 3,
                            ProductPrice = 300m
                        });
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOrderedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ClientId = 1,
                            DateOrderedUtc = new DateTime(2023, 7, 26, 3, 26, 0, 361, DateTimeKind.Local).AddTicks(2111),
                            Status = "Pending"
                        },
                        new
                        {
                            OrderId = 2,
                            ClientId = 2,
                            DateOrderedUtc = new DateTime(2023, 7, 27, 3, 26, 0, 361, DateTimeKind.Local).AddTicks(2128),
                            Status = "InProgress"
                        },
                        new
                        {
                            OrderId = 3,
                            ClientId = 3,
                            DateOrderedUtc = new DateTime(2023, 7, 28, 3, 26, 0, 361, DateTimeKind.Local).AddTicks(2129),
                            Status = "Complete"
                        });
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.PriceOffer", b =>
                {
                    b.Property<int>("PriceOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceOfferId"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("PromotinalText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PriceOfferId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("PriceOffers");

                    b.HasData(
                        new
                        {
                            PriceOfferId = 1,
                            CreatedDate = new DateTime(2023, 7, 31, 3, 26, 0, 361, DateTimeKind.Local).AddTicks(2141),
                            NewPrice = 100m,
                            ProductId = 1,
                            PromotinalText = "Promotional Text 1"
                        },
                        new
                        {
                            PriceOfferId = 2,
                            CreatedDate = new DateTime(2023, 7, 31, 3, 26, 0, 361, DateTimeKind.Local).AddTicks(2144),
                            NewPrice = 200m,
                            ProductId = 2,
                            PromotinalText = "Promotional Text 2"
                        },
                        new
                        {
                            PriceOfferId = 3,
                            CreatedDate = new DateTime(2023, 7, 31, 3, 26, 0, 361, DateTimeKind.Local).AddTicks(2144),
                            NewPrice = 300m,
                            ProductId = 3,
                            PromotinalText = "Promotional Text 3"
                        });
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "Product A"
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "Product B"
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "Product C"
                        });
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.ProductSupplier", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<byte>("Order")
                        .HasColumnType("tinyint");

                    b.HasKey("ProductId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ProductSupplier");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            SupplierId = 1,
                            Order = (byte)1
                        },
                        new
                        {
                            ProductId = 2,
                            SupplierId = 2,
                            Order = (byte)2
                        },
                        new
                        {
                            ProductId = 3,
                            SupplierId = 3,
                            Order = (byte)3
                        });
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("VoterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReviewId");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Comment = "This is a Comment 1",
                            ProductId = 1,
                            VoterName = "Voter A"
                        },
                        new
                        {
                            ReviewId = 2,
                            Comment = "This is a Comment 2",
                            ProductId = 2,
                            VoterName = "Voter B"
                        },
                        new
                        {
                            ReviewId = 3,
                            Comment = "This is a Comment 3",
                            ProductId = 3,
                            VoterName = "Voter C"
                        });
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            Description = "Description of Supplier A",
                            Name = "Supplier A"
                        },
                        new
                        {
                            SupplierId = 2,
                            Description = "Description of Supplier B",
                            Name = "Supplier B"
                        },
                        new
                        {
                            SupplierId = 3,
                            Description = "Description of Supplier C",
                            Name = "Supplier C"
                        });
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"), 1L, 1);

                    b.HasKey("TagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = 1
                        },
                        new
                        {
                            TagId = 2
                        },
                        new
                        {
                            TagId = 3
                        });
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.Views.PriceOfferView", b =>
                {
                    b.Property<decimal>("NewPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromotinalText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView("PriceOfferView");
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.Property<int>("ProductsProductId")
                        .HasColumnType("int");

                    b.Property<int>("TagsTagId")
                        .HasColumnType("int");

                    b.HasKey("ProductsProductId", "TagsTagId");

                    b.HasIndex("TagsTagId");

                    b.ToTable("ProductTag");
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.LineItem", b =>
                {
                    b.HasOne("InventoryAppEFCore.DataLayer.EfClasses.Order", null)
                        .WithMany("LineItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryAppEFCore.DataLayer.EfClasses.Product", "SelectedProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SelectedProduct");
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.Order", b =>
                {
                    b.HasOne("InventoryAppEFCore.DataLayer.EfClasses.Client", null)
                        .WithOne("Order")
                        .HasForeignKey("InventoryAppEFCore.DataLayer.EfClasses.Order", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.PriceOffer", b =>
                {
                    b.HasOne("InventoryAppEFCore.DataLayer.EfClasses.Product", null)
                        .WithOne("Promotion")
                        .HasForeignKey("InventoryAppEFCore.DataLayer.EfClasses.PriceOffer", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.ProductSupplier", b =>
                {
                    b.HasOne("InventoryAppEFCore.DataLayer.EfClasses.Product", "Product")
                        .WithMany("SuppliersLink")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryAppEFCore.DataLayer.EfClasses.Supplier", "Supplier")
                        .WithMany("ProductsLink")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.Review", b =>
                {
                    b.HasOne("InventoryAppEFCore.DataLayer.EfClasses.Product", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductTag", b =>
                {
                    b.HasOne("InventoryAppEFCore.DataLayer.EfClasses.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryAppEFCore.DataLayer.EfClasses.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.Client", b =>
                {
                    b.Navigation("Order")
                        .IsRequired();
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.Order", b =>
                {
                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.Product", b =>
                {
                    b.Navigation("Promotion")
                        .IsRequired();

                    b.Navigation("Reviews");

                    b.Navigation("SuppliersLink");
                });

            modelBuilder.Entity("InventoryAppEFCore.DataLayer.EfClasses.Supplier", b =>
                {
                    b.Navigation("ProductsLink");
                });
#pragma warning restore 612, 618
        }
    }
}
